/*********************************
 *  REST Easy Application Theme  *
 * Copyright 2014 - Nathan Osman *
 *********************************/

// Base colors
@baseBG:            #f7f7f7;
@baseFG:            #555555;
@highlight:         #99ccff;

// Palette generated from the base colors
@lightBG:           lighten(@baseBG, 10%);
@lightFG:           lighten(@baseFG, 10%);
@darkBG:            darken(@baseBG,  10%);
@darkFG:            darken(@baseFG,  10%);

// Gradient colors
@lightGradient1:    @lightBG;
@lightGradient2:    @baseBG;
@mediumGradient1:   @lightBG;
@mediumGradient2:   @darkBG;
@darkGradient1:     @baseBG;
@darkGradient2:     @darkBG;

// Border and shadow colors
@borderColor:       @darkBG;
@shadowOutsetColor: @lightFG;
@shadowInsetColor:  @darkBG;

// Dimensions used in calculations
@borderSize:        1px;
@baseVPadding:      4px;
@baseHPadding:      8px;
@containerPadding:  16px;

@headerHeight:      50px;
@headerPadding:     10px;

// TODO: implement font line-height so we can properly calculate this
@tabHeight:         18px + 2 * (@borderSize + @baseVPadding);

// Mixins used for adding features to an element
.border()         { border: @borderSize solid @borderColor; }
.borderRadius()   { border-radius: 3px; }

.container()      { padding: @containerPadding; }

.gradientLight()  { background: -moz-linear-gradient(top, @lightGradient1  0%, @lightGradient2  100%); }
.gradientMedium() { background: -moz-linear-gradient(top, @mediumGradient1 0%, @mediumGradient2 100%); }
.gradientDark()   { background: -moz-linear-gradient(top, @darkGradient1   0%, @darkGradient2   100%); }

.highlight()      { box-shadow: 0 0 3px @highlight; }

.padding()        { padding: @baseVPadding @baseHPadding; }

.shadowOutset()   { box-shadow:       1px 1px 2px @shadowOutsetColor; }
.shadowInset()    { box-shadow: inset 1px 1px 2px @shadowInsetColor; }
.textShadow()     { text-shadow:      1px 1px 0   @lightBG; }

// Standard elements
html,
body,
body > .ember-view {
    height: 100%;
}

body {
    background-color: @baseBG;
    box-sizing: border-box;
    color: @baseFG;
    font-family: Arial, Helvetica, sans-serif;
    margin: 0;
}

button {
    .border();
    .borderRadius();
    .gradientMedium();
    .padding();
    cursor: pointer;

    &:active {
        .shadowInset();
    }

    &:hover {
        .gradientDark();
    }
}

iframe {
    .border();
    background-color: @lightBG;
    height: 100%;
    width: 100%;
}

input[type=password],
input[type=text],
textarea {
    .border();
    .borderRadius();
    .padding();

    &:focus {
        .highlight();
    }

    &::-moz-placeholder {
        color: @lightFG;
    }
}

p {
    color: @lightFG;
    font-size: smaller;
    text-align: justify;
}

pre {
    white-space: pre-wrap;
    word-wrap: break-word;
}

// Utility classes
.float-left  {
    float: left;
    margin-right: 4px;
}

.float-right {
    float: right;
    margin-left: 4px;
}

.overflow-auto {
    overflow: auto;
}

.hoverhand {
  cursor: pointer;
}

.row {
    float: left;
    width: 100%;
    margin-bottom: 10px;
}

// Component classes
.combo {
    position: relative;

    button {
        text-align: left;
        width: 100%;

        &:before {
            content: "\25be";
            float: right;
            margin-left: 8px;
        }
    }

    ul {
        .border();
        .shadowOutset();
        background-color: @lightBG;
        display: none;
        list-style-type: none;
        margin: 0;
        min-width: calc(~"100%" - (2 * @borderSize));
        padding: 0;
        position: absolute;
        z-index: 1;

        &.expanded {
            display: block;
        }

        li {
            .padding();
            cursor: pointer;

            &:hover {
                background-color: @baseBG;
            }
        }
    }
}

.control {
    margin: 0 0 4px;

    input[type=password],
    input[type=text],
    textarea {
        display: block;
        width: calc(~"100%" - (2 * (@borderSize + @baseHPadding)));
    }
}

.dialog {
    background-color: rgba(red(@baseFG), green(@baseFG), blue(@baseFG), 0.5);
    display: none;
    height: 100%;
    left: 0;
    position: fixed;
    top: 0;
    width: 100%;
    z-index: 2;

    &.active {
        display: block;
    }

    .content {
        .border();
        .borderRadius();
        .container();
        .shadowOutset();
        background-color: @baseBG;
        left: 50%;
        min-width: 20%;
        position: fixed;
        top: 50%;
        transform: translate(-50%, -50%);

        .title {
            margin-top: 0;
        }

        .buttons {
            margin-top: 32px;
            text-align: center;
        }
    }
}

.header {
    .gradientMedium();
    .shadowOutset();
    height: calc(@headerHeight - 2 * @headerPadding);
    padding: @headerPadding;
    position: relative;
    z-index: 1;

    .logo {
        float: left;
        margin-right: 8px;
    }

    .title {
        .textShadow();
        line-height: 32px;
        margin: 0;
    }
}

.notice {
    .borderRadius();
    .padding();
    background-color: lighten(@highlight, 15%);
    border: @borderSize solid @highlight;
    overflow: auto;

    .actions {
        float: right;
    }

    .message {
        .padding();
    }
}

.pane {
    .container();
    height: calc(~"100%" - (@headerHeight + 2 * @containerPadding));
    overflow: auto;

    &.first {
        float: left;
        width: 300px;
    }
}

@keyframes slide {
    from { background-position: 0    0; }
    to   { background-position: 24px 0; }
}

.progress {
    .border();
    .borderRadius();
    .shadowInset();
    animation-duration: 1s;
    animation-iteration-count: infinite;
    animation-name: slide;
    animation-timing-function: linear;
    background-image: url(../img/progress.png);
    background-repeat: repeat-x;
    height: 12px;
}

.section {
    .title {
        border-bottom: @borderSize solid @borderColor;
        cursor: pointer;

        button {
            font-size: 8pt;
            margin-right: 4px;
            padding: 0;
            vertical-align: top;
        }
    }

    .content {
        display: none;
        margin: 0 8px;

        &.expanded {
            display: block;
        }
    }
}

.splitter {
    .border();
    .shadowInset();
    float: left;
    height: calc(~"100%" - (@headerHeight + 2 * @borderSize));
    cursor: ew-resize;
    width: 3px;
}

.tabs {
    height: 100%;

    .tab {
        border-bottom: none;
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
        height: @tabHeight;
        margin-bottom: -1px;

        &.active {
            .gradientLight();
            border-bottom: 1px solid @baseBG;
        }
    }

    .content {
        .border();
        .container();
        display: none;
        height: calc(~"100%" - (@tabHeight - 1px + 2 * (@borderSize + @containerPadding)));
        overflow: auto;

        &.active {
            display: block;
        }
    }
}

.table {
    border-collapse: collapse;
    width: 100%;

    tr.data {
        font-family: monospace;

        &:nth-child(even) {
            background: darken(@baseBG, 5%);
        }
    }

    th, td {
        .border;
        .padding();
        text-align: left;
    }

    .collapse {
        width: 0;
    }
}
